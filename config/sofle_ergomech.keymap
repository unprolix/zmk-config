#define CONFIG_WIRELESS

#include "zmk-helpers/key-labels/sofle.h"
#include "jjb.keymap"

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "base";
            bindings = <
BASE_LZ BASE_RZ
BASE_LT BASE_RT
BASE_LM BASE_RM
BASE_LB BASE_RB
BASE_LH_5 BASE_RH_5
				>;
				
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

        };

        gaming_layer {
            display-name = "gaming";
            bindings = <
GAMING_LZ GAMING_RZ
GAMING_LT GAMING_RT
GAMING_LM GAMING_RM
GAMING_LB GAMING_RB
GAMING_LH_5 GAMING_RH_5
             >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

	alt_alpha {
				display-name = "hierophant";
				bindings = <
HIEROPHANT_LT HIEROPHANT_RT
HIEROPHANT_LM HIEROPHANT_RM
HIEROPHANT_LB HIEROPHANT_RB
HIEROPHANT_LH_5 HIEROPHANT_RH_5
				>;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
	};

	caps_layer {
				display-name = "caps";
				bindings = <
CAPS_LT CAPS_RT
CAPS_LM CAPS_RM
CAPS_LB CAPS_RB
CAPS_LH_5 CAPS_RH_5
				>;
				
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
	};

        numeric_layer {
            display-name = "numeric";
            bindings = <
NUMERIC_LT NUMERIC_RT
NUMERIC_LM NUMERIC_RM
NUMERIC_LB NUMERIC_RB
NUMERIC_LH_5 NUMERIC_RH_5
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        navigation_layer {
            display-name = "navigation";
            bindings = <
NAVIGATION_LT NAVIGATION_RT
NAVIGATION_LM NAVIGATION_RM
NAVIGATION_LB NAVIGATION_RB
NAVIGATION_LH_5 NAVIGATION_RH_5
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        function_layer {
            display-name = "function";
            bindings = <
FUNCTION_LT FUNCTION_RT
FUNCTION_LM FUNCTION_RM
FUNCTION_LB FUNCTION_RB
FUNCTION_LH_5 FUNCTION_RH_5
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        extra_layer {
            display-name = "extra";
            bindings = <
EXTRA_LT EXTRA_RT
EXTRA_LM EXTRA_RM
EXTRA_LB EXTRA_RB
EXTRA_LH_5 EXTRA_RH_5
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        rgb_layer {
            display-name = "rgb";
            bindings = <
RGB_LT RGB_RT
RGB_LM RGB_RM
RGB_LB RGB_RB
RGB_LH_5 RGB_RH_5
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };


        system_layer {
            display-name = "system";
            bindings = <
SYSTEM_LT SYSTEM_RT
SYSTEM_LM SYSTEM_RM
SYSTEM_LB SYSTEM_RB
SYSTEM_LH_5 SYSTEM_RH_5
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };



        mod_l_nav_layer {
            display-name = "L GUI+nav";
            bindings = <
LGN_LT LGN_RT
LGN_LM LGN_RM
LGN_LB LGN_RB
LGN_LH_5 LGN_RH_5
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };


        mod_r_nav_layer {
            display-name = "R GUI+nav";
            bindings = <
RGN_LT RGN_RT
RGN_LM RGN_RM
RGN_LB RGN_RB
RGN_LH_5 RGN_RH_5
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        superscript_layer {
            display-name = "superscript";
            bindings = <
SUPERSCRIPT_LT SUPERSCRIPT_RT
SUPERSCRIPT_LM SUPERSCRIPT_RM
SUPERSCRIPT_LB SUPERSCRIPT_RB
SUPERSCRIPT_LH_5 SUPERSCRIPT_RH_5
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

/*
        empty_layer {
            display-name = "empty";
            bindings = <
EMPTY_LT EMPTY_RT
EMPTY_LM EMPTY_RM
EMPTY_LB EMPTY_RB
EMPTY_LH_5 EMPTY_RH_5
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
*/

     }; /* keymap */
}; // root node


